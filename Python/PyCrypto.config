# PyCrypto Configuration Details

-- Constructor for AES cipher object
-- key:
-- mode: block cipher mode of operation, allows block cipher to encrypt
    input of arbitrary size
-- IV: (optional) an unpredictable byte string of block size used to randomize
    the encryption of the first block of messages for modes that use block
    chaining; only used for modes CBC, CFB, OFB, PGP, and OPENPGP
-- counter: (optional) stateful function that returns the next counter value,
    a block size byte string; only used for mode CTR
-- segment_size: (optional) number of bits the plaintext and ciphertext are
    segmented in; must be a multiple of 8; only used for mode CFB
Crypto.Cipher.AES.new(key, mode, IV, counter, segment_size) :
    block_size : 16 {16}
    key : N/A {bytestring of 128, 192, 256 bits in length}
    mode: ECB {ECB, CBC, CFB, PGP, OFB, CTR, OPENPGP}
    iv: block_size bytestring of all zeroes {block_size length bytstring}
    counter: N/A {Crypto.Util.Counter object}
    segment_size: 8 {positive integer multiple of 8}